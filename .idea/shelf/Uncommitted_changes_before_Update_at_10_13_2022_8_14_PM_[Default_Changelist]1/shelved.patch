Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    package=\"com.xiaobo.smartcalendar\">\r\n    <!-- 权限设置 -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n    <uses-permission android:name=\"android.permission.SYSTEM_ALERT_WINDOW\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_COARSE_LOCATION\" /> <!-- 用于访问GPS定位 -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_FINE_LOCATION\" /> <!-- 获取运营商信息，用于支持提供运营商信息相关的接口 -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_NETWORK_STATE\" /> <!-- 用于访问wifi网络信息，wifi信息会用于进行网络定位 -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_WIFI_STATE\" /> <!-- 这个权限用于获取wifi的获取权限，wifi信息会用来进行网络定位 -->\r\n    <uses-permission android:name=\"android.permission.CHANGE_WIFI_STATE\" /> <!-- 用于访问网络，网络定位需要上网 -->\r\n    <uses-permission android:name=\"android.permission.INTERNET\" /> <!-- 用于读取手机当前的状态 -->\r\n    <uses-permission android:name=\"android.permission.READ_PHONE_STATE\" /> <!-- 写入扩展存储，向扩展卡写入数据，用于写入缓存定位数据 -->\r\n    <uses-permission android:name=\"android.permission.WRITE_EXTERNAL_STORAGE\" /> <!-- 用于申请调用A-GPS模块 -->\r\n    <uses-permission android:name=\"android.permission.ACCESS_LOCATION_EXTRA_COMMANDS\" /> <!-- 用于申请获取蓝牙信息进行室内定位 -->\r\n    <uses-permission android:name=\"android.permission.BLUETOOTH\" />\r\n    <uses-permission android:name=\"android.permission.BLUETOOTH_ADMIN\" />\r\n    <uses-permission android:name=\"android.permission.ACCESS_BACKGROUND_LOCATION\" />\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:networkSecurityConfig=\"@xml/network_security_config\"\r\n        android:roundIcon=\"@drawable/calendar\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.SmartCalendar\">\r\n        <activity\r\n            android:name=\".activity.AdjustActivity.AdjustActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".activity.TestActivity.TableActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".activity.PoiSearchWithoutMap.PoiSearchWithoutMapActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".activity.SearchLocationActivity.InputTipsActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".activity.SearchLocationActivity.SearchLocationActivity\"\r\n            android:exported=\"true\" />\r\n        <activity android:name=\".activity.TestActivity.TestActivity\" />\r\n        <activity android:name=\".activity.SetingActivity.SetingActivity\" />\r\n        <activity android:name=\".activity.RegisterActivity.RegisterActivity\" />\r\n        <activity android:name=\".activity.LoginActivity.LoginActivity\" />\r\n        <activity android:name=\".activity.AddRuleActivity.AddRuleActivity\" />\r\n        <activity android:name=\".activity.AddEventActivity.AddEventActivity\" />\r\n        <activity android:name=\".MainActivity\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity> <!-- 高德key -->\r\n        <!-- android:Desktopvalue =\"d36a9cb6b0113491dad0daa3582e6148\" -->\r\n        <!-- android:Yogavalue =\"c5131b2f39dc1ce9a7648ea657ceddbe\" -->\r\n        <meta-data\r\n            android:name=\"com.amap.api.v2.apikey\"\r\n            android:value=\"b30977c88ac77ee00d97ca2221f5a8df\" />\r\n\r\n        <service android:name=\".Service.BackgroundService.ReceivedBroadcastService\" />\r\n        <service android:name=\".Service.HttpRequest.HttpRequestIntentService\" />\r\n        <service android:name=\".Service.CalRoute.CalRouteIntentService\" />\r\n        <service android:name=\".Service.Location.LocationService\" />\r\n        <service android:name=\".Service.MainService.MainService\">\r\n            <intent-filter>\r\n                <action android:name=\"com.xiaobo.smartcalendar.mainservice\" />\r\n            </intent-filter>\r\n        </service>\r\n        <service android:name=\"com.amap.api.location.APSService\" />\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -57,7 +57,7 @@
         <!-- android:Yogavalue ="c5131b2f39dc1ce9a7648ea657ceddbe" -->
         <meta-data
             android:name="com.amap.api.v2.apikey"
-            android:value="b30977c88ac77ee00d97ca2221f5a8df" />
+            android:value="d36a9cb6b0113491dad0daa3582e6148" />
 
         <service android:name=".Service.BackgroundService.ReceivedBroadcastService" />
         <service android:name=".Service.HttpRequest.HttpRequestIntentService" />
Index: gradle.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Project-wide Gradle settings.\r\n# IDE (e.g. Android Studio) users:\r\n# Gradle settings configured through the IDE *will override*\r\n# any settings specified in this file.\r\n# For more details on how to configure your build environment visit\r\n# http://www.gradle.org/docs/current/userguide/build_environment.html\r\n# Specifies the JVM arguments used for the daemon process.\r\n# The setting is particularly useful for tweaking memory settings.\r\norg.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8\r\n# When configured, Gradle will run in incubating parallel mode.\r\n# This option should only be used with decoupled projects. More details, visit\r\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\r\n# org.gradle.parallel=true\r\n# AndroidX package structure to make it clearer which packages are bundled with the\r\n# Android operating system, and which are packaged with your app\"s APK\r\n# https://developer.android.com/topic/libraries/support-library/androidx-rn\r\nandroid.useAndroidX=true\r\n# Automatically convert third-party libraries to use AndroidX\r\nandroid.enableJetifier=true\r\n\r\n# used in OPPO findX\r\nandroid.injected.testOnly=false
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle.properties b/gradle.properties
--- a/gradle.properties	
+++ b/gradle.properties	
@@ -6,11 +6,11 @@
 # http://www.gradle.org/docs/current/userguide/build_environment.html
 # Specifies the JVM arguments used for the daemon process.
 # The setting is particularly useful for tweaking memory settings.
-org.gradle.jvmargs=-Xmx2048m -Dfile.encoding=UTF-8
+org.gradle.jvmargs=-Xmx4096m -Dfile.encoding=UTF-8
 # When configured, Gradle will run in incubating parallel mode.
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
-# org.gradle.parallel=true
+ org.gradle.parallel=true
 # AndroidX package structure to make it clearer which packages are bundled with the
 # Android operating system, and which are packaged with your app"s APK
 # https://developer.android.com/topic/libraries/support-library/androidx-rn
@@ -19,4 +19,7 @@
 android.enableJetifier=true
 
 # used in OPPO findX
-android.injected.testOnly=false
\ No newline at end of file
+android.injected.testOnly=false
+
+#Enable daemon
+org.gradle.daemon=true
\ No newline at end of file
Index: app/src/main/java/com/xiaobo/smartcalendar/activity/LoginActivity/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.xiaobo.smartcalendar.activity.LoginActivity;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.gson.Gson;\r\nimport com.xiaobo.smartcalendar.Public.ProfileManager;\r\nimport com.xiaobo.smartcalendar.R;\r\nimport com.xiaobo.smartcalendar.activity.RegisterActivity.RegisterActivity;\r\n\r\nimport java.io.IOException;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.Callback;\r\nimport okhttp3.FormBody;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\nimport static com.xiaobo.smartcalendar.Public.PublicVaribale.LOGIN_SUCCESS;\r\nimport static com.xiaobo.smartcalendar.Public.PublicVaribale.LOGIN_URL;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    EditText usernameEditText;\r\n    EditText passwordEditText;\r\n    Button loginButton;\r\n    Button forgetPosswordButton;\r\n    Button registerButton;\r\n\r\n    String username;\r\n    String password;\r\n\r\n    String token;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n\r\n        Intent i = getIntent();\r\n        Bundle userInfo = i.getExtras();\r\n        if (userInfo != null) {\r\n            try {\r\n                username = userInfo.getString(\"username\");\r\n                password = userInfo.getString(\"password\");\r\n            }\r\n            catch (Exception e) {\r\n                Log.e(\"LoginActivity\", \"获取用户信息错误\");\r\n            }\r\n        }\r\n\r\n        token = ProfileManager.get(getApplicationContext()).getToken();\r\n\r\n        usernameEditText = findViewById(R.id.username_login);\r\n        passwordEditText = findViewById(R.id.password_login);\r\n        loginButton = findViewById(R.id.button_login);\r\n        forgetPosswordButton = findViewById(R.id.button_forget_password);\r\n        registerButton = findViewById(R.id.button_register_on_loginactivity);\r\n\r\n        usernameEditText.setText(\"username001\");\r\n        passwordEditText.setText(\"123456\");\r\n\r\n        if (!(username == null)) {\r\n            usernameEditText.setText(username);\r\n        }\r\n        if (!(password == null)) {\r\n            passwordEditText.setText(password);\r\n        }\r\n\r\n        username = usernameEditText.getText().toString();\r\n        password = passwordEditText.getText().toString();\r\n\r\n        loginButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Log.d(\"LoginActivity\", \"用户点击了登录按钮\");\r\n                if (usernameEditText.toString().length() == 0 || passwordEditText.toString().length() == 0) {\r\n                    Toast.makeText(LoginActivity.this, \"用户名或密码不能为空\", Toast.LENGTH_SHORT).show();\r\n                }\r\n                else {\r\n                    String request = UserLogin(LOGIN_URL, username, password);\r\n                }\r\n            }\r\n        });\r\n\r\n        forgetPosswordButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Log.d(\"LoginActivity\", \"用户点击了忘记密码按钮\");\r\n            }\r\n        });\r\n\r\n        registerButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                Log.d(\"LoginActivity\", \"用户点击了注册按钮\");\r\n                Intent i = new Intent(LoginActivity.this, RegisterActivity.class);\r\n                i.putExtra(\"username\", usernameEditText.getText().toString());\r\n                startActivityForResult(i, 1003);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void AfterLogin(String request) {\r\n        // 存储token\r\n        ProfileManager.get(getApplicationContext()).setToken(token);\r\n    }\r\n\r\n    /**\r\n     * 登录\r\n     * @param url       URL\r\n     * @param username  用户名\r\n     * @param password  密码\r\n     * @return\r\n     */\r\n    private String UserLogin(String url, String username, String password) {\r\n        String action = \"login\";\r\n        String login_mode = \"login_verify_use_password\";\r\n        final StringBuffer state = new StringBuffer();\r\n\r\n        OkHttpClient client = new OkHttpClient();\r\n        RequestBody requestBody = new FormBody.Builder()\r\n                .add(\"action\", action)\r\n                .add(\"login_mode\", login_mode)\r\n                .add(\"username\", username)\r\n                .add(\"password\", password)\r\n                .build();\r\n\r\n        // 不弄成数组的话  会报错\r\n        final LoginModel[] model = {null};\r\n\r\n        final Request request = new Request.Builder()\r\n                .url(url)\r\n                .post(requestBody)\r\n                .build();\r\n        Call call = client.newCall(request);;\r\n        call.enqueue(new Callback() {\r\n            @Override\r\n            public void onFailure(Call call, IOException e) {\r\n                Log.e(\"用户登陆失败\", e.toString());\r\n            }\r\n\r\n            @Override\r\n            public void onResponse(Call call, Response response) throws IOException {\r\n                String result= response.body().string();\r\n                Gson gson = new Gson();\r\n                model[0] = gson.fromJson(result, LoginModel.class);\r\n                if (response.isSuccessful()) {\r\n                    Log.d(\"登陆成功\", \"response ----->\" + result);\r\n                    state.append(\"josn请求码 -> \" + response.code() + \"\\n\");\r\n                    state.append(\"登陆返回结果 ->\" + model[0].getMsg() + \"\\n\");\r\n                    token = model[0].getToken();\r\n                    // 存储token\r\n                    ProfileManager.get(getApplicationContext()).setToken(token);\r\n\r\n                    String state = LOGIN_SUCCESS;\r\n                    // 登陆成功发出广播\r\n                    sendMessage(result, state);\r\n\r\n                    finish();\r\n                }\r\n                else {\r\n                    Log.e(\"登陆错误 -> \", result);\r\n                    state.append(\"登陆失败\");\r\n                }\r\n                AfterLogin(model[0].getMsg());\r\n            }\r\n        });\r\n\r\n        return state.toString();\r\n    }\r\n\r\n    // 发送通知 发送接收到的信息\r\n    private void sendMessage(String str, String state) {\r\n        Intent i = new Intent();\r\n        i.setAction(\"com.login_state\");\r\n        i.putExtra(\"massage\", str);\r\n        i.putExtra(\"state\", state);\r\n\r\n        this.sendBroadcast(i);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/xiaobo/smartcalendar/activity/LoginActivity/LoginActivity.java b/app/src/main/java/com/xiaobo/smartcalendar/activity/LoginActivity/LoginActivity.java
--- a/app/src/main/java/com/xiaobo/smartcalendar/activity/LoginActivity/LoginActivity.java	
+++ b/app/src/main/java/com/xiaobo/smartcalendar/activity/LoginActivity/LoginActivity.java	
@@ -83,6 +83,7 @@
             @Override
             public void onClick(View view) {
                 Log.d("LoginActivity", "用户点击了登录按钮");
+                Log.d("LoginActivity", "username is " + username + ", password is " + password);
                 if (usernameEditText.toString().length() == 0 || passwordEditText.toString().length() == 0) {
                     Toast.makeText(LoginActivity.this, "用户名或密码不能为空", Toast.LENGTH_SHORT).show();
                 }
Index: gradle/wrapper/gradle-wrapper.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#Thu Apr 15 22:47:30 CST 2021\r\ndistributionBase=GRADLE_USER_HOME\r\ndistributionPath=wrapper/dists\r\nzipStoreBase=GRADLE_USER_HOME\r\nzipStorePath=wrapper/dists\r\ndistributionUrl=https\\://services.gradle.org/distributions/gradle-6.7.1-bin.zip\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties
--- a/gradle/wrapper/gradle-wrapper.properties	
+++ b/gradle/wrapper/gradle-wrapper.properties	
@@ -1,6 +1,6 @@
-#Thu Apr 15 22:47:30 CST 2021
+#Sat Oct 01 19:28:15 CST 2022
 distributionBase=GRADLE_USER_HOME
+distributionUrl=https\://services.gradle.org/distributions/gradle-6.7.1-bin.zip
 distributionPath=wrapper/dists
-zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-6.7.1-bin.zip
+zipStoreBase=GRADLE_USER_HOME
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"RemoteRepositoriesConfiguration\">\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"central\" />\r\n      <option name=\"name\" value=\"Maven Central repository\" />\r\n      <option name=\"url\" value=\"https://repo1.maven.org/maven2\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"jboss.community\" />\r\n      <option name=\"name\" value=\"JBoss Community repository\" />\r\n      <option name=\"url\" value=\"https://repository.jboss.org/nexus/content/repositories/public/\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"BintrayJCenter\" />\r\n      <option name=\"name\" value=\"BintrayJCenter\" />\r\n      <option name=\"url\" value=\"https://jcenter.bintray.com/\" />\r\n    </remote-repository>\r\n    <remote-repository>\r\n      <option name=\"id\" value=\"Google\" />\r\n      <option name=\"name\" value=\"Google\" />\r\n      <option name=\"url\" value=\"https://dl.google.com/dl/android/maven2/\" />\r\n    </remote-repository>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
--- a/.idea/jarRepositories.xml	
+++ b/.idea/jarRepositories.xml	
@@ -21,5 +21,10 @@
       <option name="name" value="Google" />
       <option name="url" value="https://dl.google.com/dl/android/maven2/" />
     </remote-repository>
+    <remote-repository>
+      <option name="id" value="maven" />
+      <option name="name" value="maven" />
+      <option name="url" value="https://maven.aliyun.com/repository/google/" />
+    </remote-repository>
   </component>
 </project>
\ No newline at end of file
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.3\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.xiaobo.smartcalendar\"\r\n        minSdkVersion 26\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.1\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.1.0'\r\n    implementation 'com.google.android.material:material:1.1.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'\r\n    implementation 'androidx.recyclerview:recyclerview:1.2.1'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.1'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'\r\n\r\n    compileOnly 'org.projectlombok:lombok:1.18.16'\r\n    annotationProcessor 'org.projectlombok:lombok:1.18.16'\r\n    //noinspection GradleCompatible\r\n//    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n\r\n    // 首页日历\r\n    implementation 'com.haibin:calendarview:3.7.1'\r\n    // HTTP请求\r\n    implementation 'com.squareup.okhttp3:okhttp:3.11.0'\r\n    // 路径计算\r\n    implementation 'com.amap.api:search:latest.integration'\r\n    // 定位\r\n//    implementation 'com.amap.api:location:latest.integration'\r\n    // 地图\r\n    implementation 'com.amap.api:3dmap:latest.integration'\r\n    // JSON解析\r\n    implementation 'com.google.code.gson:gson:2.8.5'\r\n    // pickerview\r\n    implementation 'com.contrarywind:Android-PickerView:4.1.9'\r\n    // 权限请求\r\n    implementation 'com.yanzhenjie:permission:2.0.3'\r\n    // json格式化\r\n    implementation 'com.alibaba:fastjson:1.1.72.android'\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle b/app/build.gradle
--- a/app/build.gradle	
+++ b/app/build.gradle	
@@ -14,6 +14,10 @@
         versionName "1.1"
 
         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
+
+        aaptOptions.cruncherEnabled = false
+        aaptOptions.useNewCruncher = false
+
     }
 
     buildTypes {
